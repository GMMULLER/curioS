{
  "dataflow": {
    "nodes": [
      {
        "id": "1919efd1-c2c5-440f-b2a5-444c99e83932",
        "type": "DATA_LOADING",
        "x": 96,
        "y": 162,
        "content": "import pandas as pd\r\nimport json\r\nimport numpy as np\r\n\r\njson_features_file = open(\"flickr-spring-features.json\")\r\n\r\nparsed_json_features = json.load(json_features_file)\r\n\r\ndf_scatterplot = pd.json_normalize(parsed_json_features[\"features\"])\r\n\r\ndf_scatterplot = df_scatterplot[[\"rank\", \"resolutions.ALL.fnRank\", \"resolutions.ALL.sigRank\", \"resolutions.ALL.maxRank\"]]\r\ndf_scatterplot = df_scatterplot.rename(columns={\"resolutions.ALL.fnRank\": \"fnRank\", \"resolutions.ALL.sigRank\": \"sigRank\", \"resolutions.ALL.maxRank\": \"maxRank\"})\r\n\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"fnRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"sigRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"maxRank\"])\r\n\r\ndf_scatterplot[\"combinedRanks\"] = np.sqrt(\r\n    df_scatterplot[\"maxRank\"] ** 2 +\r\n    df_scatterplot[\"fnRank\"] ** 2 +\r\n    df_scatterplot[\"sigRank\"] ** 2\r\n)\r\n\r\nreturn df_scatterplot",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "Load and preprocess Flickr spring features data, extracting relevant columns and calculating combined ranks.",
        "metadata": {
          "keywords": [
            0,
            1,
            2,
            6,
            7,
            8,
            10,
            12,
            13
          ]
        }
      },
      {
        "id": "cb61f686-ba32-4e8a-8c61-726f4be54213",
        "type": "VIS_VEGA",
        "x": 900,
        "y": 100,
        "content": "{ \r\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \r\n  \"title\": \"RANK (spring)\",\r\n  \"params\": [ {\"name\": \"clickSelect\", \"select\": \"interval\"} ], \r\n  \"mark\": { \"type\": \"point\", \"cursor\": \"pointer\" }, \r\n  \"encoding\": { \r\n    \"x\": {\"field\": \"combinedRanks\", \"type\": \"quantitative\"},\r\n    \"y\": {\"field\": \"rank\", \"type\": \"quantitative\"}, \r\n    \"fillOpacity\": { \r\n        \"condition\": {\"param\": \"clickSelect\", \"value\": 1}, \r\n        \"value\": 0.3 \r\n    }, \r\n    \"color\": { \r\n      \"field\": \"interacted\", \r\n      \"type\": \"nominal\", \r\n      \"condition\": {\r\n        \"test\": \"datum.interacted === '1'\", \"value\": \"red\", \"else\": \"blue\"} } \r\n  }, \r\n  \"config\": { \"scale\": { \"bandPaddingInner\": 0.2 } } \r\n}",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "",
        "metadata": {
          "keywords": [
            12,
            13,
            5,
            9
          ]
        }
      },
      {
        "id": "30460ee7-4c9a-4fa0-9800-4ef82502afac",
        "type": "DATA_LOADING",
        "x": 96.99999999999983,
        "y": 639.0000000000001,
        "content": "import pandas as pd\r\nimport json\r\nimport numpy as np\r\n\r\njson_features_file = open(\"flickr-summer-features.json\")\r\n\r\nparsed_json_features = json.load(json_features_file)\r\n\r\ndf_scatterplot = pd.json_normalize(parsed_json_features[\"features\"])\r\n\r\ndf_scatterplot = df_scatterplot[[\"rank\", \"resolutions.ALL.fnRank\", \"resolutions.ALL.sigRank\", \"resolutions.ALL.maxRank\"]]\r\ndf_scatterplot = df_scatterplot.rename(columns={\"resolutions.ALL.fnRank\": \"fnRank\", \"resolutions.ALL.sigRank\": \"sigRank\", \"resolutions.ALL.maxRank\": \"maxRank\"})\r\n\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"fnRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"sigRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"maxRank\"])\r\n\r\ndf_scatterplot[\"combinedRanks\"] = np.sqrt(\r\n    df_scatterplot[\"maxRank\"] ** 2 +\r\n    df_scatterplot[\"fnRank\"] ** 2 +\r\n    df_scatterplot[\"sigRank\"] ** 2\r\n)\r\n\r\nreturn df_scatterplot",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "Load and preprocess Flickr summer features data, extracting rank and resolutions columns, dropping missing values, and calculating combinedRanks for visualization.",
        "metadata": {
          "keywords": [
            0,
            1,
            3,
            6,
            7,
            8,
            10,
            12,
            13
          ]
        }
      },
      {
        "id": "5d737aab-f8b6-4d8d-8993-502db124bbd2",
        "type": "VIS_VEGA",
        "x": 896.9999999999999,
        "y": 573.0000000000001,
        "content": "{ \r\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \r\n  \"title\": \"RANK (summer)\",\r\n  \"params\": [ {\"name\": \"clickSelect\", \"select\": \"interval\"} ], \r\n  \"mark\": { \"type\": \"point\", \"cursor\": \"pointer\" }, \r\n  \"encoding\": { \r\n    \"x\": {\"field\": \"combinedRanks\", \"type\": \"quantitative\"},\r\n    \"y\": {\"field\": \"rank\", \"type\": \"quantitative\"}, \r\n    \"fillOpacity\": { \r\n        \"condition\": {\"param\": \"clickSelect\", \"value\": 1}, \r\n        \"value\": 0.3 \r\n    }, \r\n    \"color\": { \r\n      \"field\": \"interacted\", \r\n      \"type\": \"nominal\", \r\n      \"condition\": {\r\n        \"test\": \"datum.interacted === '1'\", \"value\": \"red\", \"else\": \"blue\"} } \r\n  }, \r\n  \"config\": { \"scale\": { \"bandPaddingInner\": 0.2 } } \r\n} ",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "",
        "metadata": {
          "keywords": [
            12,
            13,
            5,
            9
          ]
        }
      },
      {
        "id": "ba06142d-bc60-4e73-969a-14c00c3879e5",
        "type": "DATA_LOADING",
        "x": 99.99999999999983,
        "y": 1152.0000000000002,
        "content": "import pandas as pd\r\nimport json\r\nimport numpy as np\r\n\r\njson_features_file = open(\"flickr-fall-features.json\")\r\n\r\nparsed_json_features = json.load(json_features_file)\r\n\r\ndf_scatterplot = pd.json_normalize(parsed_json_features[\"features\"])\r\n\r\ndf_scatterplot = df_scatterplot[[\"rank\", \"resolutions.ALL.fnRank\", \"resolutions.ALL.sigRank\", \"resolutions.ALL.maxRank\"]]\r\ndf_scatterplot = df_scatterplot.rename(columns={\"resolutions.ALL.fnRank\": \"fnRank\", \"resolutions.ALL.sigRank\": \"sigRank\", \"resolutions.ALL.maxRank\": \"maxRank\"})\r\n\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"fnRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"sigRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"maxRank\"])\r\n\r\ndf_scatterplot[\"combinedRanks\"] = np.sqrt(\r\n    df_scatterplot[\"maxRank\"] ** 2 +\r\n    df_scatterplot[\"fnRank\"] ** 2 +\r\n    df_scatterplot[\"sigRank\"] ** 2\r\n)\r\n\r\nreturn df_scatterplot",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "Load and process data from flickr-fall-features.json by extracting relevant columns, removing missing values, and calculating combinedRanks for visualization in a scatterplot.",
        "metadata": {
          "keywords": [
            0,
            1,
            4,
            6,
            7,
            8,
            10,
            12,
            13
          ]
        }
      },
      {
        "id": "2ee78370-1b6e-4fcb-af1f-f61260e9e3c1",
        "type": "VIS_VEGA",
        "x": 889.9999999999999,
        "y": 1069.0000000000002,
        "content": "{ \r\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \r\n  \"title\": \"RANK (fall)\",\r\n  \"params\": [ {\"name\": \"clickSelect\", \"select\": \"interval\"} ], \r\n  \"mark\": { \"type\": \"point\", \"cursor\": \"pointer\" }, \r\n  \"encoding\": { \r\n    \"x\": {\"field\": \"combinedRanks\", \"type\": \"quantitative\"},\r\n    \"y\": {\"field\": \"rank\", \"type\": \"quantitative\"}, \r\n    \"fillOpacity\": { \r\n        \"condition\": {\"param\": \"clickSelect\", \"value\": 1}, \r\n        \"value\": 0.3 \r\n    }, \r\n    \"color\": { \r\n      \"field\": \"interacted\", \r\n      \"type\": \"nominal\", \r\n      \"condition\": {\r\n        \"test\": \"datum.interacted === '1'\", \"value\": \"red\", \"else\": \"blue\"} } \r\n  }, \r\n  \"config\": { \"scale\": { \"bandPaddingInner\": 0.2 } } \r\n} ",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "",
        "metadata": {
          "keywords": [
            12,
            13,
            5,
            9
          ]
        }
      },
      {
        "id": "a97981a5-b6d6-4c6f-9b54-b302f47caf3c",
        "type": "DATA_LOADING",
        "x": 80.99999999999977,
        "y": 1752.0000000000002,
        "content": "import pandas as pd\r\nimport json\r\nimport numpy as np\r\n\r\njson_features_file = open(\"flickr-winter-features.json\")\r\n\r\nparsed_json_features = json.load(json_features_file)\r\n\r\ndf_scatterplot = pd.json_normalize(parsed_json_features[\"features\"])\r\n\r\ndf_scatterplot = df_scatterplot[[\"rank\", \"resolutions.ALL.fnRank\", \"resolutions.ALL.sigRank\", \"resolutions.ALL.maxRank\"]]\r\ndf_scatterplot = df_scatterplot.rename(columns={\"resolutions.ALL.fnRank\": \"fnRank\", \"resolutions.ALL.sigRank\": \"sigRank\", \"resolutions.ALL.maxRank\": \"maxRank\"})\r\n\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"fnRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"sigRank\"])\r\ndf_scatterplot = df_scatterplot.dropna(subset=[\"maxRank\"])\r\n\r\ndf_scatterplot[\"combinedRanks\"] = np.sqrt(\r\n    df_scatterplot[\"maxRank\"] ** 2 +\r\n    df_scatterplot[\"fnRank\"] ** 2 +\r\n    df_scatterplot[\"sigRank\"] ** 2\r\n)\r\n\r\nreturn df_scatterplot",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "Load and preprocess data from flickr-winter-features.json by extracting relevant columns and calculating a new column named combinedRanks. Drop rows with missing values in crucial columns.",
        "metadata": {
          "keywords": [
            0,
            1,
            5,
            6,
            7,
            8,
            10,
            12,
            13
          ]
        }
      },
      {
        "id": "18b028b8-8c0f-4f91-b21b-672fa0608caf",
        "type": "VIS_VEGA",
        "x": 888.9999999999999,
        "y": 1673.0000000000002,
        "content": "{ \r\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \r\n  \"title\": \"RANK (fall)\",\r\n  \"params\": [ {\"name\": \"clickSelect\", \"select\": \"interval\"} ], \r\n  \"mark\": { \"type\": \"point\", \"cursor\": \"pointer\" }, \r\n  \"encoding\": { \r\n    \"x\": {\"field\": \"combinedRanks\", \"type\": \"quantitative\"},\r\n    \"y\": {\"field\": \"rank\", \"type\": \"quantitative\"}, \r\n    \"fillOpacity\": { \r\n        \"condition\": {\"param\": \"clickSelect\", \"value\": 1}, \r\n        \"value\": 0.3 \r\n    }, \r\n    \"color\": { \r\n      \"field\": \"interacted\", \r\n      \"type\": \"nominal\", \r\n      \"condition\": {\r\n        \"test\": \"datum.interacted === '1'\", \"value\": \"red\", \"else\": \"blue\"} } \r\n  }, \r\n  \"config\": { \"scale\": { \"bandPaddingInner\": 0.2 } } \r\n} ",
        "out": "DEFAULT",
        "in": "DEFAULT",
        "goal": "",
        "metadata": {
          "keywords": [
            12,
            13,
            5,
            9
          ]
        }
      }
    ],
    "edges": [
      {
        "id": "reactflow__edge-1919efd1-c2c5-440f-b2a5-444c99e83932out-cb61f686-ba32-4e8a-8c61-726f4be54213in",
        "source": "1919efd1-c2c5-440f-b2a5-444c99e83932",
        "target": "cb61f686-ba32-4e8a-8c61-726f4be54213",
        "metadata": {
          "keywords": [
            1,
            12
          ]
        }
      },
      {
        "id": "reactflow__edge-30460ee7-4c9a-4fa0-9800-4ef82502afacout-5d737aab-f8b6-4d8d-8993-502db124bbd2in",
        "source": "30460ee7-4c9a-4fa0-9800-4ef82502afac",
        "target": "5d737aab-f8b6-4d8d-8993-502db124bbd2",
        "metadata": {
          "keywords": [
            1,
            12
          ]
        }
      },
      {
        "id": "reactflow__edge-ba06142d-bc60-4e73-969a-14c00c3879e5out-2ee78370-1b6e-4fcb-af1f-f61260e9e3c1in",
        "source": "ba06142d-bc60-4e73-969a-14c00c3879e5",
        "target": "2ee78370-1b6e-4fcb-af1f-f61260e9e3c1",
        "metadata": {
          "keywords": [
            1,
            12
          ]
        }
      },
      {
        "id": "reactflow__edge-a97981a5-b6d6-4c6f-9b54-b302f47caf3cout-18b028b8-8c0f-4f91-b21b-672fa0608cafin",
        "source": "a97981a5-b6d6-4c6f-9b54-b302f47caf3c",
        "target": "18b028b8-8c0f-4f91-b21b-672fa0608caf",
        "metadata": {
          "keywords": [
            1,
            12
          ]
        }
      }
    ],
    "name": "DefaultWorkflow",
    "task": "Load and preprocess data from the JSON file flickr-spring-features.json by extracting relevant columns such as rank, fnRank, sigRank, and maxRank. Drop any rows with missing values in the fnRank, sigRank, and maxRank columns. Calculate a new column named combinedRanks using the square root of the sum of squares of the maxRank, fnRank, and sigRank. Visualize the processed data using a Vega-Lite scatterplot, where the x-axis represents combinedRanks and the y-axis represents rank, incorporating interactive elements to enhance user engagement. Load and preprocess data from flickr-summer-features.json in a similar manner, extracting the same columns and calculating combinedRanks, followed by visualization in a scatterplot format. Finally, load and process data from flickr-fall-features.json similarly, ensuring that all data is accurately prepared for comparative visualization with the spring and summer datasets.",
    "timestamp": 1743022635173,
    "provenance_id": "DefaultWorkflow"
  }
}